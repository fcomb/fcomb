akka {
  logger-startup-timeout = 10s
  log-dead-letters-during-shutdown = off
  loglevel = INFO
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor.provider = "cluster"

  http {
    server {
      server-header = fcomb
      transparent-head-requests = off
      parsing.max-content-length = infinite
    }

    client.user-agent-header = "fcomb"
  }
}

fcomb {
  api {
    interface = "0.0.0.0"
    http-port = 8080
    https-port = 8443
  }

  tls {
    cert = ""
    key = ""
  }

  jdbc {
    url = "jdbc:postgresql://127.0.0.1:5432/fcomb"
    user = "postgres"
    password = ""
  }

  storage.path = "/data"

  gc {
    # How much time we give to incomplete upload files to live before gc will delete them
    outdated-period = "1d"

    # Interval to check to find outdated incomplete files and delete them
    outdated-check-interval = "1h"

    # Interval to check to find files which marked to delete and delete them
    deleting-check-interval = "10m"
  }

  security {
    # docker distribution basic auth realm
    realm = "fcomb registry"

    # Allow to user sign up without an admin
    open-sign-up = false

    # Allow to pull a public repositories for anonymous users
    anonymous-public-repositories = false
  }

  jwt {
    secret = ""
    session-ttl = 30d
    reset-password-ttl = 1h
  }
}
