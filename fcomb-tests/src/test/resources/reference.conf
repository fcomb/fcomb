fcomb-server {
  actor-system-name = "fcomb"

  akka {
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

    # TODO: custom verifier for docker nodes
    ssl-config.hostnameVerifierClass = "com.typesafe.sslconfig.ssl.DisabledComplainingHostnameVerifier"

    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
    }

    cluster {
      seed-nodes = []
      auto-down-unreachable-after = 10s

      sharding {
        state-store-mode = "ddata"
      }
    }

    # extensions = ["akka.cluster.metrics.ClusterMetricsExtension"]

    http {
      server {
        server-header = "fcomb"
        parsing.max-content-length = infinite
      }

      client {
        user-agent-header = "fcomb"
      }
    }

    remote {
      # log-remote-lifecycle-events = off

      netty.tcp {
        hostname = "127.0.0.1"
        port = 0
      }
    }

    persistence {
      journal.plugin = "jdbc-journal"
      snapshot-store.plugin = "jdbc-snapshot-store"
    }
  }

  rest-api {
    interface = "0.0.0.0"
    port = 8080
  }

  docker {
    distribution {
      image-storage = "file:///tmp"

      rest-api {
        interface = "0.0.0.0"
        port = 8090
      }
    }
  }

  jdbc-slick {
    dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
    maxConnections = 50
    numThreads = 10
  }

  certificates {
    issuer {
      organizationalUnit = "fcomb node agent"
      organization = "fcomb LLC"
      city = "Moscow"
      state = "Moscow"
      country = "RU"
    }
  }
}

kamon {
  internal-config {
    akka {
      loglevel = DEBUG

      actor.default-dispatcher {
        fork-join-executor.parallelism-factor = 1.0
      }
    }
  }

  metric {
    track-unmatched-entities = yes

    # filters {
    #   akka-actor {
    #     includes = ["*/user/*"]
    #     excludes = [ "*/system/**", "*/user/IO-**", "*kamon*" ]
    #   }

    #   akka-router {
    #     includes = ["*/user/*"]
    #     excludes = []
    #   }

    #   akka-dispatcher {
    #     includes = ["*/user/*"]
    #     excludes = []
    #   }

    #   trace {
    #     includes = [ "**" ]
    #     excludes = [ ]
    #   }
    # }
  }

  statsd {
    flush-interval = 10 seconds

    simple-metric-key-generator.application = "fcomb-server"

    subscriptions {
      histogram       = [ "**" ]
      min-max-counter = [ "**" ]
      gauge           = [ "**" ]
      counter         = [ "**" ]
      trace           = [ "**" ]
      trace-segment   = [ "**" ]
      akka-actor      = [ "**" ]
      akka-dispatcher = [ "**" ]
      akka-router     = [ "**" ]
      system-metric   = [ "**" ]
      http-server     = [ "**" ]
    }
  }

  modules {
    kamon-log-reporter.auto-start = no
    kamon-system-metrics.auto-start = no
    kamon-statsd.auto-start = no
    kamon-akka.auto-start = no
  }
}
