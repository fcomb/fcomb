akka {
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # TODO: custom verifier for docker nodes
  ssl-config.hostnameVerifierClass = "com.typesafe.sslconfig.ssl.DisabledComplainingHostnameVerifier"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  cluster {
    seed-nodes = []
    auto-down-unreachable-after = 10s

    sharding {
      state-store-mode = "ddata"
    }
  }

  # extensions = ["akka.cluster.metrics.ClusterMetricsExtension"]

  http {
    server {
      server-header = "fcomb"
      transparent-head-requests = off
      parsing.max-content-length = infinite
    }

    client {
      user-agent-header = "fcomb"
    }
  }

  remote {
    # log-remote-lifecycle-events = off

    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  persistence {
    journal.plugin = "akka.persistence.journal.inmem"
    journal.leveldb.dir = "/tmp"
  }
}

fcomb-server {
  actor-system-name = "fcomb"
  rest-api {
    interface = "0.0.0.0"
    port = 8080
  }

  akka = ${akka}

  docker {
    distribution {
      image-storage = "/tmp"
      realm = "fcomb registry"

      rest-api {
        interface = "0.0.0.0"
        port = 8090
      }
    }
  }

  jdbc-slick {
    dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
    maxConnections = 50
    numThreads = 10
  }

  certificates {
    issuer {
      organizationalUnit = "fcomb node agent"
      organization = "fcomb LLC"
      city = "Moscow"
      state = "Moscow"
      country = "RU"
    }
  }
}
